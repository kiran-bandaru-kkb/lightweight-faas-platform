# Generated by Django 5.2.5 on 2025-08-24 05:33

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('orchestrator', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='WorkerNode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('hostname', models.CharField(max_length=255, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('status', models.CharField(choices=[('ONLINE', 'Online'), ('OFFLINE', 'Offline'), ('DRAINING', 'Draining')], default='ONLINE', max_length=20)),
                ('last_heartbeat', models.DateTimeField(auto_now=True)),
                ('max_memory_mb', models.PositiveIntegerField()),
                ('available_memory_mb', models.PositiveIntegerField()),
            ],
        ),
        migrations.RemoveField(
            model_name='function',
            name='code_path',
        ),
        migrations.AddField(
            model_name='function',
            name='code',
            field=models.TextField(default=django.utils.timezone.now, help_text='The raw Python source code of the function.'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='function',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='function',
            name='entry_point',
            field=models.CharField(default='handle', help_text="The name of the function to invoke (e.g., 'handle', 'main').", max_length=255),
        ),
        migrations.AddField(
            model_name='function',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='function',
            name='memory_mb',
            field=models.PositiveIntegerField(default=128),
        ),
        migrations.AddField(
            model_name='function',
            name='requirements',
            field=models.TextField(blank=True, help_text="Contents of requirements.txt for the function's dependencies."),
        ),
        migrations.AddField(
            model_name='function',
            name='timeout_seconds',
            field=models.PositiveIntegerField(default=30),
        ),
        migrations.AddField(
            model_name='function',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='function',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.CreateModel(
            name='Deployment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('version', models.PositiveIntegerField()),
                ('comment', models.CharField(blank=True, max_length=255)),
                ('code_snapshot', models.TextField()),
                ('requirements_snapshot', models.TextField()),
                ('entry_point_snapshot', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False, help_text='Is this the live deployment?')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deployments', to='orchestrator.function')),
            ],
            options={
                'ordering': ['function', '-version'],
                'unique_together': {('function', 'version')},
            },
        ),
        migrations.CreateModel(
            name='FunctionInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('IDLE', 'Idle'), ('ERROR', 'Error')], default='PENDING', max_length=20)),
                ('port', models.PositiveIntegerField()),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('deployment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orchestrator.deployment')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orchestrator.workernode')),
            ],
            options={
                'unique_together': {('worker', 'port')},
            },
        ),
        migrations.CreateModel(
            name='InvocationRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('request_id', models.CharField(max_length=255)),
                ('request_body', models.TextField(blank=True, null=True)),
                ('request_headers', models.JSONField(default=dict)),
                ('response_body', models.TextField(blank=True, null=True)),
                ('response_status_code', models.PositiveIntegerField(blank=True, null=True)),
                ('response_headers', models.JSONField(default=dict)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_cold_start', models.BooleanField()),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILURE', 'Failure'), ('TIMEOUT', 'Timeout')], max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('deployment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orchestrator.deployment')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orchestrator.function')),
                ('instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orchestrator.functioninstance')),
            ],
            options={
                'indexes': [models.Index(fields=['function', 'start_time'], name='orchestrato_functio_d0a49c_idx'), models.Index(fields=['request_id'], name='orchestrato_request_da8792_idx')],
            },
        ),
    ]
